## DML

테이블의 데이터를 조작하기 위한 명령어

- INSERT : 1개 이상 데이터 삽입
    - 레코드 수 증가, 단일 행 삽입
    - INSERT INTO 테이블명 VALUES
- UPDATE : 1개 이상 수정
    - 레코드 수 변화 없음
    - UPDATE 테이블명 SET 컬럼명 = {값|서브쿼리}
    - WHERE 생략하면 모든 레코드가 수정되니 조심할것
- DELETE : 1개 이상 삭제
    - 레코드 수 감소
    - 기존 데이터 삭제
    - DELETE FROM 테이블명
    - WHERE 조건

## 트랜잭션

- 원자성을 가지는 하나의 논리적인 작업 단위 (ex. 금융 거래, 재고 관리 등
- 분할해서 실행할 수 없는 한번에 처리해야 하는 작업들의 모음
- 여러개의 SQL문을 하나의 작업 단위로 묶어 처리
- All or Nothing 으로 표현
- 모든작업 성공시 COMMIT, 하나라도 실패 시 ROLLBACK
- 데이터 무결성 보장하는 핵심 개념

### 특징 (ACID)

- Atomicity 원자성 : 모든연산 성공하거나, 하나라도 실패시 전체 취소
- Consistency 일관성 : 트랙잭션 실행 전 후 DB 상태 일관성 유지
    - 데이터의 무결성 및 비즈니스 규칙이 항상 유지되는 상태
- Isolation 고립성 : 하나 완료될 때 까지 다른것 접근 X (하나 완료까지 다른게 결과 참조 X)
- Durability 지속성 : 성공시 영구적 반영

잠금 : 동시성을 제어하기 위한 기능

- 공유 가능한 데이터들은 동시에 접근 시 문제가 생길 수 있음

격리 수준 : 하나 또는 여러 트랜잭션 간의 작업 내용을 어떻게 공유하고 차단할 것인지 결정 레벨

- READ UNCOMMITED : 커밋되지 않은 데이터 읽을 수 있따
    - 단점 Dirty Read : 커밋될지 롤백 될지 모르는 경우 문제
- READ COMMITED : 커밋된 데이터만 읽을 수 있다
    - Non-Repeatbale Read : 반복 읽기 불가 (읽을 때도 잠금이 실행되는 상황이 생김)
- REPEATABLE READ : 트랜잭션 내에서 같은 데이터 조회시 항상 같은 데이터 조회 보장
    - Phantom Read : UPDATE는 막지만 INSERT는 허용
    - 새로운 값이 있을 때 없었던 데이터가 있는 경우
- SERIALIZABLE : 가장 엄격한 수준으로 동시 실행 막음
    - 성능 저하 : 다막아놓음

## TCL

- START TRANSACTION : 트랜잭션 시작, 암묵적 자동 커밋 해제
    - BEGIN TRANSACTION
- COMMIT : 트랜잭션 성공 완료, 변경 사항 저장
- ROLLBACK : 트랜잭션 취소, 변경 사항 되돌림
- SAVEPOINT SAVEPOINT : 특정 지점 저장하여 부분 롤백

## MYSQL 데이터 타입

숫자, 문자, 날짜 ,기타 지원

- 숫자
    - 많이 쓰는거 : INT, 고정 소수점 : DECIMAL, NUMERIC
    - FLOAT는 유동 소수점
    - UNSIGNED도 지원 : 양수 쓰면 2배까지 표현 가능
- 문자
    - CHAR과 VARCHAR 구분하기
    - CHAR : 고정길이 EX. CHAR(10) → 공백 패딩 줌
    - VARCHAR : 가변길이 EX. VARCHAR(10) 실제 사용하는 글자 공간만 사용
        - 실제 길이 저장하는 바이트 추가
    - TEXT : 대량 텍스트
    - BLOB : 이미지, 동영상
- 문자
    - ENUM : 값들 중 하나만 값만 가짐 (범주형 데이터를 만들고 범주형 아닌건 저장 X)
        - 값이 고정된 형태로 범주형 → 그 값들 중 하나만 저장
    - SET : 비슷하지만 여러개 값을 가질 수 있음
- 날짜
    - DATETIME : 고정된 날짜 정보 - 지역화된 정보
    - TIMESTAMP : 협정 세계시 기준 절대 시간 저장

## DDL

생성 삭제 변경 명령어

- CREATE
- ALTER
- DROP

UI 기반 메뉴 이용하는게 많을거다

하지만 초기 스키마를 구현할 때는 ERD를 그린 후 DDL 스크립트 뽑아서 DB에 구축

# 강사님 정리

TRANSACTION LOCK : DB마다 지원하는게 다르다 상황도 다르고

지피티로 물어보고 읽어봐라

PHANTOM READ 도 읽어바라

## 트랜젝션

mysql에서는오토커밋이 default

start transaction 명시적으로 선언하면 다름

내가 제어하게 되면 insert, update, delete를 커밋이나 롤백을 계속헤도됨

끝나는걸 명시적으로 해야 종료

트랜잭션 키면 트랜잭션 캐시가 커짐

- 역할 : 캐시가 언제사라지나면 마지막에 트랜잭션이 종료했을 때
- 종료 : rollback이 일어나면 종료

isolation 단계가 트랜잭션이 어떻게 반영될까 하는거다

select계열 → 데이터 변형 시키지 않는다

그 나머지 계열 (insert, update, delete) → 데이터 변형

이 두개의 계열이 다르다

lock

- unlock
- shared lock
- exclusive lock

예전 테이블 단위의 락

요즘은 로우 단위 락

더 가면 로우의 컬럼단위의 락

트랜잭션 키고 insert 시 데이터를 넣으면 A는 데이터가 있는거처럼 보이지만

B가 접근하면 없는거 처럼 보인다

트랜잭션 종료 전까지는 A는 변경된거 처럼 보이지만 B는 안보인다

만약 둘다 트랜잭션 키고 같은 데이터를 넣으면 심각한 오류가 일어난다

그래서 나온게 exclusive

B가 select 하면 shared lock 까지만

exclusive는 B가 데이터 볼 수 있지만 변형은 못하게 막는다

이렇게 다른 두 클라이언트가 동시에 접근 안되면

하나의 트랜잭션에서 그 두개의 행동을 수행

원자성 : all or not

에러 나면 트랜잭션 캐시에 있는 걸 지운다 (rollback)

read uncommitted : 많이 안씀

→ 남이 commit 하지 않은걸 읽게 하지 않는다

read committed : 커밋딘 데이터만 봄

mysql에서만 있는

repetable read : select를 두번하면 shared lock 까지 간거라 다른 애가 exclusive lock 취득 가능

mysql은 다른애가 커밋햇더라도 처음 select 했던 데이터는 그대로 나오게 한다

이걸 디플트로 둠

이건 정하기 나름이다

rollback은 catch가 일어나면 발동

교착상태 : 테이블 라킹상태

누구 하나가 롤백 되어야 데드락이 풀려버림

시간이 지나면 전체를 롤백

백업, DDL이 실행되면 리드를 다 막아버림

![image.png](attachment:e71f5067-f21b-4cb3-90ff-9ef7dc5b1cef:image.png)

## view

뷰로 만든건 가상 테이블이다

mysql과 mariadb에서만 from에선 as를 줘야 한다

create view empdept
as
select ename, sal, dname, dsal
from emp join dept using(deptno)
join (select deptno, sum(sal) as dsal from emp group by deptno) c
on (emp.deptno = c.deptno);

select * from empdept;

위랑 아래랑 똑같은 거다

select * from (select ename, sal, dname, dsal
from emp join dept using(deptno)
join (select deptno, sum(sal) as dsal from emp group by deptno) c
on (emp.deptno = c.deptno)) aa;

가상 테이블에서 변경해도 바뀐다

사용은일반 테이블에서 처럼 똑같이 쓴다

### 뷰쓰는 이유

1. 복잡한 쿼리를 단순화 하기 위해
2. 실제 테이블 명과 컬럼명을 다 바꿀 수 있다

뷰는 insert update delete는 어렵다

원래는 되지 않는게 기본이다

말그대로 조회 전용이라서

단순 뷰 : 하나의 테이블로 만든거

- 근데 하나의 테이블로 만든거 중 모든게 단순 뷰는 아니다
- 테이블 로우 변형시키는 함수가 사용되면 안됨 (ex. 집계합수 → group, count , …)
- 연산도 쓰지 말라

복합 뷰 : 두개 이상의 테이블에서 만든거
